{"version":3,"sources":["assets/imgplaceholder.png","components/atoms/Header.js","components/atoms/LoggedIn.js","queries/queries.js","components/atoms/AddFriend.js","components/atoms/AddPost.js","components/atoms/Divider.js","components/atoms/PicIcon.js","components/atoms/Name.js","components/atoms/Post.js","components/atoms/AddComment.js","components/molecules/CommentItem.js","components/molecules/PostItem.js","components/molecules/Login.js","components/pages/Homepage.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderWrapper","styled","div","_templateObject","InsideHeadWrapper","h1","_templateObject2","Header","props","react_default","a","createElement","LoggedInWrapper","LoggedIn_templateObject","InnerWrapper","LoggedIn_templateObject2","ButtonWrapper","button","_templateObject3","LoggedIn","onClick","window","location","reload","Component","getUsersQuery","gql","queries_templateObject","getPostsQuery","queries_templateObject2","addUserMutation","queries_templateObject3","_templateObject4","addPostMutation","_templateObject5","addPostCommentMutation","_templateObject6","addFriendMutation","_templateObject7","_templateObject8","getPostQuery","_templateObject9","AddFriend","e","preventDefault","this","variables","userID","friendsID","target","value","_this","users","map","user","key","id","firstName","lastName","onAddFriendClick","compose","graphql","name","InputWrapper","input","AddPost_templateObject","AddPost_templateObject2","AddPost","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","newpost","today","Date","datePublished","getDate","getMonth","getFullYear","content","refetchQueries","query","setState","_this2","onSubmit","submitForm","onChange","placeholder","AddPost_ButtonWrapper","HrWrapper","hr","Divider_templateObject","Divider","DivWrapper","PicIcon_templateObject","PicIconWrapper","img","PicIcon_templateObject2","PicIcon","height","newht","src","imgplaceholder","NameWrapper","Name_templateObject","Name","names","PostWrapper","span","Post_templateObject","Post","inside","postcomment","comment","CommentWrapper","form","AddComment_templateObject","LabelWrapper","label","AddComment_templateObject2","AddComment_templateObject3","AddComment","newcomment","postID","post","dateComment","AddComment_InputWrapper","buttonClick","CommentItemWrapper","CommentItem_templateObject","PostItem","comments","index","atoms_PicIcon","atoms_Name","atoms_Post","atoms_Divider","displayComments","PostItemWrapper","PostItem_templateObject","data","undefined","posts","newdata","filter","element","console","log","loading","atoms_AddComment","CommentItem","postcomments","displayPosts","LoginWrapper","Login_templateObject","Login_templateObject2","Login_templateObject3","Login_templateObject4","FormWrapper","Login_templateObject5","Login","login","email","password","error","errorMessage","submitCreateAccountForm","find","test","trim","dateRegistered","pagechange","friendlists","atoms_Header","Login_InsideHeadWrapper","style","color","Login_InputWrapper","type","passwordMask_min_default","inputStyles","textAlign","buttonStyles","display","Login_ButtonWrapper","onClickButton","client","ApolloClient","uri","HomepageWrapper","Homepage_templateObject","HeadWrapper","Homepage_templateObject2","Head2Wrapper","Homepage_templateObject3","AddFriendWrapper","Homepage_templateObject4","AddPostWrapper","Homepage_templateObject5","DividerWrapper","Homepage_templateObject6","Homepage_templateObject7","Homepage","PageChange","friendLists","loggedin","react_apollo_esm","atoms_LoggedIn","atoms_AddFriend","atoms_AddPost","Homepage_PostItemWrapper","molecules_PostItem","molecules_Login","ReactDOM","render","pages_Homepage","document","getElementById"],"mappings":"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","file":"static/js/main.04979c13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imgplaceholder.0ee8c1d1.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n//components\r\n// import Login from './Login';\r\n\r\nconst HeaderWrapper = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: rgb(0, 153, 51);\r\n    justify-align: center;\r\n`\r\n\r\nconst InsideHeadWrapper = styled.h1`\r\n    margin-left: 20px;\r\n    color: white;\r\n`\r\nconst Header = (props) =>{\r\n    return (\r\n            <HeaderWrapper>\r\n                <InsideHeadWrapper>\r\n                    Fitbook\r\n                </InsideHeadWrapper>\r\n            </HeaderWrapper>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Component} from 'react';\r\n\r\nconst LoggedInWrapper = styled.div`\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 80px;\r\n    background-color: rgb(0, 153, 51);\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n    display: block;\r\n    text-align: right;\r\n    margin-top: 30px;\r\n    color: white;\r\n`\r\n\r\nconst ButtonWrapper = styled.button`\r\n    all: unset;\r\n    margin-right: 40px;\r\n    color: white;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nclass LoggedIn extends Component{\r\n    render () {\r\n        return (\r\n            <LoggedInWrapper>\r\n                <InnerWrapper>\r\n                        <ButtonWrapper onClick={() => window.location.reload()}>Logout</ButtonWrapper>\r\n                </InnerWrapper>\r\n            </LoggedInWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoggedIn;","import {gql} from 'apollo-boost';\r\n\r\nconst getUsersQuery = gql`\r\n    {\r\n        users {\r\n            id\r\n            email\r\n            password\r\n            firstName\r\n            lastName\r\n            friendlists {\r\n                friendsID\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst getPostsQuery = gql`\r\n    {\r\n        posts {\r\n            id\r\n            userID\r\n            datePublished\r\n            content\r\n            user{\r\n                id\r\n                firstName\r\n                lastName\r\n            }\r\n            postcomments{\r\n                id\r\n                comment\r\n                user{\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                }\r\n            }\r\n            poststat {\r\n                id\r\n                postID\r\n                likeCount\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst addAuthUserMutation = gql`\r\n    mutation($userID: ID!, $token: String!, $tokenExpiration: Int!) {\r\n        addUser(userID: $userID, token: $token, tokenExpiration: $tokenExpiration){\r\n            userID\r\n            token\r\n            tokenExpiration\r\n        }\r\n    }\r\n`\r\n\r\nconst addUserMutation = gql`\r\n    mutation($email: String!, $password: String!, $dateRegistered: String!, $firstName: String!, $lastName: String!) {\r\n        addUser(email: $email, password: $password, dateRegistered: $dateRegistered, firstName: $firstName, lastName: $lastName){\r\n            email\r\n            password\r\n            dateRegistered\r\n            firstName\r\n            lastName\r\n        }\r\n    }\r\n`\r\n\r\nconst addPostMutation = gql`\r\n    mutation($userID: ID!, $datePublished: String!, $content: String!) {\r\n        addPost(userID: $userID, datePublished: $datePublished, content: $content){\r\n            userID\r\n            datePublished\r\n            content\r\n        }\r\n    }\r\n`\r\n\r\nconst addPostCommentMutation = gql`\r\n    mutation($postID: ID!, $userID: ID!, $comment: String!, $dateComment: String!) {\r\n        addPostComment(postID: $postID, userID: $userID, comment: $comment, dateComment: $dateComment){\r\n            postID\r\n            userID\r\n            comment\r\n            dateComment\r\n        }\r\n    }\r\n`\r\n\r\nconst addPostStatMutation = gql`\r\n    mutation($postID: ID!, $likeCount: Number!) {\r\n        addPostStat(postID: $postID, likeCount: $likeCount){\r\n            postID\r\n            likeCount\r\n        }\r\n    }\r\n`\r\n\r\nconst addFriendMutation = gql`\r\n    mutation($userID: ID!, $friendsID: ID!) {\r\n        addFriend(userID: $userID, friendsID: $friendsID){\r\n            userID\r\n            friendsID\r\n        }\r\n    }\r\n`\r\n\r\nconst getPostQuery = gql`\r\n    query($id: ID){\r\n        user(id: $id){\r\n            posts {\r\n                id\r\n                userID\r\n                datePublished\r\n                content\r\n                postcomments {\r\n                    id\r\n                    postID\r\n                    userID\r\n                    comment\r\n                    dateComment\r\n                    user {\r\n                        firstName\r\n                        lastName\r\n                    }\r\n                }\r\n                poststat {\r\n                    id\r\n                    postID\r\n                    likeCount\r\n                }\r\n                user {\r\n                    firstName\r\n                    lastName\r\n                    dateRegistered\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport { getUsersQuery, \r\n         getPostsQuery, \r\n         addAuthUserMutation,\r\n         addUserMutation, \r\n         addPostMutation, \r\n         addPostCommentMutation, \r\n         addPostStatMutation,\r\n         addFriendMutation, \r\n         getPostQuery };","import React from 'react';\r\nimport {Component} from 'react';\r\nimport {graphql, compose} from 'react-apollo';\r\nimport { addFriendMutation, getUsersQuery } from '../../queries/queries';\r\n\r\nclass AddFriend extends Component {\r\n    \r\n    onAddFriendClick(e) {\r\n        e.preventDefault(); \r\n        this.props.addFriendMutation({\r\n            variables: {\r\n                userID: this.props.userID,\r\n                friendsID: e.target.value,\r\n            },\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.getUsersQuery.users.map((user) => {\r\n                return (\r\n                    <div key={user.id}>\r\n                        <p>{user.firstName} {user.lastName}</p>\r\n                        <button value={user.id} onClick={(e) => this.onAddFriendClick(e)}>Add Friend</button>\r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(addFriendMutation, {name: \"addFriendMutation\"}),\r\n    graphql(getUsersQuery, {name: \"getUsersQuery\"})\r\n)(AddFriend);","import React from 'react';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport {graphql, compose} from 'react-apollo';\r\nimport { getPostQuery, addPostMutation } from '../../queries/queries';\r\n\r\nconst InputWrapper = styled.input`\r\n    height: 30px;\r\n    width: 50vw;\r\n`\r\n\r\nconst ButtonWrapper = styled.button`\r\n    margin-top: 3px;\r\n`\r\n\r\nclass AddPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newpost: '',\r\n        }\r\n    }\r\n\r\n    submitForm(e) {\r\n        const today = new Date();\r\n        e.preventDefault(); \r\n        this.props.addPostMutation({\r\n            variables: {\r\n                userID: this.props.userID,\r\n                datePublished: today.getDate() + \"/\" + today.getMonth() + \"/\" + today.getFullYear(),\r\n                content: this.state.newpost\r\n            },\r\n            refetchQueries: [{\r\n                query: getPostQuery,\r\n                variables: {\r\n                    id: this.props.userID\r\n                }\r\n            }]\r\n        })\r\n        this.setState ({\r\n            newpost: '',\r\n        })\r\n\r\n    }\r\n\r\n     render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={(e) => this.submitForm(e)}>\r\n                    <InputWrapper \r\n                    value={this.state.newpost}\r\n                    onChange={(e) => this.setState ({newpost: e.target.value})}\r\n                    placeholder=\"What fitness task did you do today?\" />\r\n                </form>\r\n                <ButtonWrapper onClick={(e) => this.submitForm(e)}>Submit</ButtonWrapper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(addPostMutation, {name: \"addPostMutation\"})\r\n)(AddPost);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HrWrapper = styled.hr`\r\n    border-top: 1px;\r\n    border-color: #DCDCDC;\r\n`\r\n\r\nconst Divider = () => {\r\n    return (\r\n        <HrWrapper />\r\n    )\r\n}\r\n\r\nexport default Divider;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n//components\r\nimport imgplaceholder from '../../assets/imgplaceholder.png';\r\n\r\nconst DivWrapper = styled.div`\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n`\r\n\r\nconst PicIconWrapper = styled.img`\r\n    width: auto;\r\n    border: 1px solid rgb(192,192,192);\r\n    border-radius: 50%;\r\n`\r\n\r\nclass PicIcon extends Component{\r\n    render() {\r\n        return (\r\n            <DivWrapper>\r\n                <PicIconWrapper height={this.props.newht}src={imgplaceholder}/>\r\n            </DivWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PicIcon;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NameWrapper = styled.div`\r\n    margin-left: 10px;\r\n    font-size: 12px;\r\n    font-weight: bold;\r\n    display: inline-block;\r\n`\r\n\r\nconst Name = (props) => {\r\n        return (\r\n            <NameWrapper>\r\n                <span>\r\n                    {props.names? props.names.firstName : props.user.firstName}\r\n                </span>\r\n                <span>\r\n                    &nbsp;\r\n                </span>\r\n                <span>\r\n                    {props.names? props.names.lastName : props.user.lastName}\r\n                </span>\r\n            </NameWrapper>\r\n        )\r\n}\r\n\r\nexport default Name;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PostWrapper = styled.span`\r\n    font-size: 12px;\r\n    margin-top: 5x;\r\n    margin-right: 5px;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nclass Post extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PostWrapper>\r\n                    {this.props.inside? this.props.inside : this.props.postcomment.comment }\r\n                </PostWrapper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport {graphql, compose} from 'react-apollo';\r\nimport { getPostQuery, addPostCommentMutation } from '../../queries/queries';\r\n\r\nconst CommentWrapper = styled.form`\r\n    margin-top: 10px;\r\n    font-size: 12px;\r\n`\r\n\r\nconst LabelWrapper = styled.label`\r\n    display: block;\r\n`\r\n\r\nconst InputWrapper = styled.input`\r\n    width: 700px;\r\n    height: 30px;\r\n    display: block;\r\n    //resize: vertical;\r\n`\r\n\r\nclass AddComment extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newcomment: '',\r\n        }\r\n    }\r\n\r\n    buttonClick(e) {\r\n        const today = new Date();\r\n        e.preventDefault(); \r\n        this.props.addPostCommentMutation({\r\n            variables: {\r\n                postID: this.props.post.id,\r\n                userID: this.props.post.userID,\r\n                dateComment: today.getDate() + \"/\" + today.getMonth() + \"/\" + today.getFullYear(),\r\n                comment: this.state.newcomment\r\n            },\r\n            refetchQueries: [{\r\n                query: getPostQuery,\r\n                variables: {\r\n                    id: this.props.post.userID,\r\n                }\r\n            }]\r\n        })\r\n        this.setState ({\r\n            newcomment: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CommentWrapper onSubmit={(e) => e.preventDefault()}>\r\n                    <LabelWrapper>Comment</LabelWrapper>\r\n                    <InputWrapper \r\n                    value={this.state.newcomment}\r\n                    onChange={(e) => this.setState ({newcomment: e.target.value})}\r\n                    placeholder=\"Enter comment here...\"></InputWrapper>\r\n                </CommentWrapper>\r\n                <button onClick={(e) => this.buttonClick(e)}>Submit</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(addPostCommentMutation, {name: \"addPostCommentMutation\"})\r\n)(AddComment);","import React from 'react';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\n\r\n//components\r\nimport PicIcon from '../atoms/PicIcon';\r\nimport Name from '../atoms/Name';\r\nimport Post from '../atoms/Post';\r\nimport Divider from '../atoms/Divider';\r\n\r\nconst CommentItemWrapper = styled.div`\r\n    padding: 10px;\r\n`\r\n\r\nclass PostItem extends Component {\r\n\r\n    displayComments(){\r\n        \r\n        const comments = this.props.comments;\r\n\r\n        return (\r\n            comments.map ((comment, index) =>   \r\n                <CommentItemWrapper key={index}>\r\n                    <div>\r\n                        <PicIcon newht={\"25px\"}/>\r\n                        <Name user={comment.user}/>\r\n                    </div>\r\n                    <div>\r\n                        <Post postcomment={comment}/>\r\n                        <Divider />\r\n                    </div>\r\n                </CommentItemWrapper>\r\n            )\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.displayComments()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostItem;","import React from 'react';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport {graphql} from 'react-apollo';\r\nimport { getPostsQuery } from '../../queries/queries';\r\n\r\n//components\r\nimport PicIcon from '../atoms/PicIcon';\r\nimport Name from '../atoms/Name';\r\nimport Post from '../atoms/Post';\r\nimport AddComment from '../atoms/AddComment';\r\nimport Divider from '../atoms/Divider';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst PostItemWrapper = styled.div`\r\n    margin-bottom: 60px;\r\n`\r\n\r\nclass PostItem extends Component {\r\n    displayPosts() {\r\n        const data = this.props.data;\r\n\r\n        if(data.posts !== undefined) {\r\n                const newdata = data.posts.filter((element) => {\r\n                    return element.userID === this.props.userID\r\n                })\r\n                console.log(\"!@newdata\", newdata)\r\n        }\r\n\r\n        if(data.loading) {\r\n            return (\r\n                <div>Loading Posts...</div>\r\n            )\r\n        } else {\r\n                return data.posts.map((post,index) => {\r\n                    return (\r\n                            <PostItemWrapper key={index}>\r\n                                <div>\r\n                                    <PicIcon newht={\"50px\"}/>\r\n                                    <Name names={post.user}/>\r\n                                </div>\r\n                                <div>\r\n                                    <Post inside={post.content}/>\r\n                                    <Divider />\r\n                                </div>\r\n                                <div>\r\n                                    <AddComment post={post}/>\r\n                                    <Divider />\r\n                                </div>\r\n                                <div>\r\n                                    <CommentItem comments={post.postcomments}/>\r\n                                </div>\r\n                                <div>\r\n                                    <Divider />\r\n                                </div>\r\n                            </PostItemWrapper>\r\n                    )\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.displayPosts()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// export default graphql(getPostQuery, {\r\n//     options: (props) => {\r\n//         return {\r\n//             variables: {\r\n//                 id: props.userID\r\n//         }}\r\n//     }\r\nexport default graphql(getPostsQuery, {\r\n})(PostItem);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {Component} from 'react';\r\nimport {graphql, compose} from 'react-apollo';\r\nimport { getUsersQuery, addUserMutation } from '../../queries/queries';\r\nimport PasswordMask from 'react-password-mask';\r\n// import jwt from 'jsonwebtoken';\r\n\r\nimport Header from '../atoms/Header'\r\n\r\nconst LoginWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: white;\r\n    margin-right: 20px;\r\n    color: black;\r\n    align-items: center;\r\n    text-align: center;\r\n`\r\n\r\nconst InsideHeadWrapper = styled.span`\r\n    display: flex;\r\n    font-weight: bold;\r\n    margin: 20px 0;\r\n`\r\n\r\nconst InputWrapper = styled.input`\r\n    text-align: center;\r\n`\r\n\r\nconst ButtonWrapper = styled.button`\r\n    margin-top: 10px;\r\n`\r\n\r\nconst FormWrapper = styled.div`\r\n    margin-top: 5px;\r\n`\r\n\r\nclass Login extends Component{\r\n    state = {\r\n        login: true,\r\n        email: \"\",\r\n        password: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        error: false,\r\n        errorMessage: \"\",\r\n    }\r\n\r\n    onClickButton(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            login: !this.state.login,\r\n            error: true,\r\n            errorMessage: \"\",\r\n        }, () => null)\r\n    }\r\n\r\n    submitCreateAccountForm = (e) => {\r\n        const regex = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        const today = new Date();\r\n        e.preventDefault();\r\n\r\n        if(!this.state.login && this.state.firstName && this.state.lastName && this.state.email && this.state.password) {\r\n            if (this.props.getUsersQuery.users.find((users) => users.email === this.state.email)) {\r\n                this.setState ({\r\n                    error: true,\r\n                    errorMessage: \"User already exists!\"\r\n                })\r\n            } \r\n            else if (regex.test(this.state.email) === false) {\r\n                this.setState ({\r\n                    error: true,\r\n                    errorMessage: \"Invalid Email Address!\"\r\n                })\r\n            }\r\n            else { \r\n                this.props.addUserMutation({\r\n                    variables: {\r\n                        email: this.state.email.trim(),\r\n                        password: this.state.password.trim(),\r\n                        dateRegistered: today.getDate() + \"/\" + today.getMonth() + \"/\" + today.getFullYear(),\r\n                        firstName: this.state.firstName.trim(),\r\n                        lastName: this.state.lastName.trim(),\r\n                    }\r\n                })\r\n                this.setState ({\r\n                    login: true,\r\n                    email: \"\",\r\n                    password: \"\",\r\n                })\r\n                window.location.reload()\r\n            }\r\n        } \r\n        \r\n        if(this.state.login && this.state.email && this.state.password) {\r\n            if (this.props.getUsersQuery.users.find((users) => users.email === this.state.email)) {\r\n                const user = this.props.getUsersQuery.users.find((users) => users.email === this.state.email)\r\n                if( user.password === this.state.password) {\r\n                    this.props.pagechange(user.id, user.friendlists);\r\n                } else {\r\n                    this.setState ({\r\n                        error: true,\r\n                        errorMessage: \"Incorrect Password...\"\r\n                    })\r\n                }\r\n                // const token = jwt.sign({email: this.state.email, password: this.state.password}, \"mysecret\", {expiresIn: \"1h\"})\r\n            } else {\r\n                this.setState ({\r\n                    error: true,\r\n                    errorMessage: \"Incorrect Username...\"\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <LoginWrapper>\r\n                    <InsideHeadWrapper>{this.state.login? \"Login\" : \"Register\"}</InsideHeadWrapper>\r\n                    <form>\r\n                        {this.state.error? <span style={{color:\"red\"}}>{this.state.errorMessage}</span> : null}\r\n                        {!this.state.login? \r\n                        (<div>\r\n                            <FormWrapper>\r\n                                <label>First Name <br/></label>\r\n                                <InputWrapper \r\n                                    value={this.state.firstName}\r\n                                    onChange={(e)=> this.setState ({ firstName: e.target.value })}\r\n                                    type=\"field\"/>\r\n                            </FormWrapper>\r\n                            <FormWrapper>\r\n                                <label>Last Name <br/></label>\r\n                                <InputWrapper \r\n                                    value={this.state.lastName}\r\n                                    onChange={(e)=> this.setState ({ lastName: e.target.value })}\r\n                                    type=\"field\" />\r\n                            </FormWrapper>\r\n                        </div>) : null }\r\n                        <div>\r\n                            <FormWrapper>\r\n                                <label>Email <br/></label>\r\n                                <InputWrapper \r\n                                    value={this.state.email}\r\n                                    onChange={(e)=> this.setState ({ email: e.target.value })}\r\n                                    type=\"field\" />\r\n                            </FormWrapper>\r\n                            <FormWrapper>\r\n                                <label>Password <br/></label>\r\n                                <PasswordMask\r\n                                    inputStyles={{textAlign:\"center\"}}\r\n                                    buttonStyles={{display:\"none\"}}\r\n                                    value={this.state.password}\r\n                                    onChange={(e)=> this.setState ({ password: e.target.value })}/>\r\n                            </FormWrapper>\r\n                        </div>\r\n                    </form>\r\n                    <div>\r\n                        <ButtonWrapper onClick={this.submitCreateAccountForm}>{this.state.login? \"Login Account\" : \"Create Account\"}</ButtonWrapper>\r\n                        <ButtonWrapper onClick={(e) => this.onClickButton(e)}>{this.state.login? \"create a new account?\" : \"login to an existing account?\"}</ButtonWrapper>\r\n                    </div>\r\n                </LoginWrapper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(getUsersQuery, {name: \"getUsersQuery\"}),\r\n    graphql(addUserMutation, {name: \"addUserMutation\"})\r\n)(Login);","import React from 'react';\r\nimport {Component} from 'react';\r\nimport styled from 'styled-components';\r\nimport ApolloClient from 'apollo-boost';\r\nimport {ApolloProvider} from 'react-apollo';\r\n\r\n//components\r\nimport Header from '../atoms/Header';\r\nimport LoggedIn from '../atoms/LoggedIn';\r\nimport AddFriend from '../atoms/AddFriend';\r\nimport AddPost from '../atoms/AddPost';\r\nimport Divider from '../atoms/Divider';\r\nimport PostItem from  '../molecules/PostItem';\r\nimport Login from '../molecules/Login';\r\n\r\n//apollo client setup local\r\n// const client = new ApolloClient({\r\n//     uri: 'http://localhost:4000/graphql'\r\n//   })\r\n\r\n//apollo client setup heroku\r\nconst client = new ApolloClient({\r\nuri: 'https://fitbook-graphql-heroku.herokuapp.com/graphql'\r\n})\r\n\r\nconst HomepageWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-template-rows: repeat(4, 1fr);\r\n    grid-template-areas: \"Head    Head    Head2    Head2\"\r\n                         \"addPost addPost addPost addPost\"\r\n                         \"Divider Divider Divider Divider\"\r\n                         \"Post    Post    Post    Friend\";\r\n    height: 80px;\r\n`\r\n\r\nconst HeadWrapper = styled.div`\r\n    grid-area: Head;\r\n    align-self: center;\r\n`\r\n\r\nconst Head2Wrapper = styled.div`\r\n    grid-area: Head2;\r\n    align-self: center;\r\n`\r\n\r\nconst AddFriendWrapper = styled.div`\r\n    margin-left: 10px;\r\n    grid-area: Friend;\r\n    align-self: start;\r\n    justify-self: center;\r\n`\r\n\r\n\r\nconst AddPostWrapper = styled.div`\r\n    grid-area: addPost;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    justify-self: center;\r\n`\r\n\r\nconst DividerWrapper = styled.div`\r\n    grid-area: Divider;\r\n    align-self: center;\r\n`\r\n\r\nconst PostItemWrapper = styled.div`\r\n    grid-area: Post;\r\n    justify-self: center;\r\n`\r\nclass Homepage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedin: false,\r\n            userID: \"\",\r\n            friendLists: [],\r\n        }\r\n    }\r\n\r\n    PageChange = (userID, friendLists) => {\r\n        this.setState ({\r\n            loggedin: !this.state.loggedin,\r\n            userID: userID,\r\n            friendLists: friendLists\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ApolloProvider client={client}>\r\n                    {this.state.loggedin?\r\n                            <HomepageWrapper>\r\n                                <HeadWrapper>\r\n                                    <Header />\r\n                                </HeadWrapper>\r\n                                <Head2Wrapper>\r\n                                    <LoggedIn />\r\n                                </Head2Wrapper>\r\n                                <AddFriendWrapper>\r\n                                    <AddFriend userID={this.state.userID} friendLists={this.state.friendLists}/>\r\n                                </AddFriendWrapper>\r\n                                <AddPostWrapper>\r\n                                    <AddPost userID={this.state.userID}/>\r\n                                </AddPostWrapper>\r\n                                <DividerWrapper>\r\n                                    <Divider />\r\n                                </DividerWrapper>\r\n                                <PostItemWrapper >\r\n                                    <PostItem userID={this.state.userID} friendLists={this.state.friendLists}/>\r\n                                </PostItemWrapper>\r\n                            </HomepageWrapper> :\r\n                            <Login pagechange={this.PageChange}/>\r\n                    }\r\n            </ApolloProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Homepage from './components/pages/Homepage'\r\n\r\nReactDOM.render(<Homepage />, document.getElementById('root'));"],"sourceRoot":""}